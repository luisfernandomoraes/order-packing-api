// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Luis Fernando Moraes",
            "email": "luisfernandomoraes@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/calculate": {
            "post": {
                "description": "Calculates the best package combination to fulfill an order, minimizing items shipped and number of packages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calculate"
                ],
                "summary": "Calculate optimal package combination",
                "parameters": [
                    {
                        "description": "Order quantity and package sizes",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CalculateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CalculateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid order, negative value, or invalid pack sizes",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns the health status of the API",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "status: healthy",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.CalculateRequest": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 501
                },
                "pack_sizes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        250,
                        500,
                        1000,
                        2000,
                        5000
                    ]
                }
            }
        },
        "handlers.CalculateResponse": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "integer",
                    "example": 501
                },
                "pack_sizes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        250,
                        500,
                        1000,
                        2000,
                        5000
                    ]
                },
                "packs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    },
                    "example": {
                        "250": 1,
                        "500": 1
                    }
                },
                "surplus": {
                    "type": "integer",
                    "example": 249
                },
                "total_items": {
                    "type": "integer",
                    "example": 750
                },
                "total_packs": {
                    "type": "integer",
                    "example": 2
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "Order Packing Calculator API",
	Description:      "A REST API to calculate the optimal package combination to fulfill orders, minimizing items shipped and number of packages.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
